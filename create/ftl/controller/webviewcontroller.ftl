<#include "../function.ftl">package ${packname}.controller.view;import ${packname}.controller.BaseController;<@getImport cols packname refCols joinTables />import java.util.Map;import java.util.HashMap;<@genJoinAndRefImport joinTables refCols  /><#assign tablePrimaryKeyColumnType><@getTableKeyType cols /></#assign><#assign colInteger>${checkColTypeIsToJavaNotString(tablePrimaryKeyColumnType)?string}</#assign>@Controller@RequestMapping("/view/${tab?lower_case}")public class ${tab}ViewController extends BaseController {		Logger logger = LogManager.getLogger(${tab}ViewController.class.getName());		protected ModelAndView mv = new ModelAndView();		public static String path = "${tab?lower_case}/";		@Resource	private ${tab}Service ${tab?uncap_first}Svc;		<@genJoinAndRefService joinTables refCols  />		RequestParamBeanLoader rpbl = new RequestParamBeanLoader();		@Login(value=LoginResultReturnType.page,reqFromType=LoginRequestFromType.web)	@RequestMapping(value = "/new")	public ModelAndView add(){		mv.setViewName(BaseController.webviewpath + ${tab}ViewController.path + "${tab?lower_case}_add");		return mv;	}		@Login(value=LoginResultReturnType.page,reqFromType=LoginRequestFromType.web)	@RequestMapping(value="/save")	public ModelAndView save(HttpServletRequest request){		<#if hasExtendColumn>		${tab}Extend  ${tab?uncap_first}Upd = new ${tab}Extend();		<#else>		${tab}  ${tab?uncap_first}Upd = new ${tab}();		</#if>		rpbl.load(${tab?uncap_first}Upd,request);		<#if colInteger=='true'>		if(<#list cols as col><#if col.primaryKey>${tab?uncap_first}Upd.get<@getTableKeyForSetGet cols/>()==null<#break></#if></#list>){			 <#-- ${tab?uncap_first}Upd.setCreateTime(new Date());有创建时间、更新时间项目使用，其他项目可删除 -->			 ${tab?uncap_first}Svc.add${tab}(${tab?uncap_first}Upd);		}else{			if(null!=${tab?uncap_first}Upd.get<@getTableKeyForSetGet cols/>Mults()){				for(int i<@getTableKeyForSetGet cols/>=0;i<@getTableKeyForSetGet cols/><${tab?uncap_first}Upd.get<@getTableKeyForSetGet cols/>Mults().length;i<@getTableKeyForSetGet cols/>++){					${tab?uncap_first}Upd.set<@getTableKeyForSetGet cols/>((Integer) ${tab?uncap_first}Upd.get<@getTableKeyForSetGet cols/>Mults()[i<@getTableKeyForSetGet cols/>]);					${tab?uncap_first}Svc.upd${tab}ByPrimaryKey(${tab?uncap_first}Upd);				}			}else{				<#-- ${tab?uncap_first}Upd.setUpdateTime(new Date());有创建时间、更新时间项目使用，其他项目可删除 -->				${tab?uncap_first}Svc.upd${tab}ByPrimaryKey(${tab?uncap_first}Upd);//				${tab}  ${tab?uncap_first} = new ${tab}();		//更新数据过滤条件//				${tab?uncap_first}Svc.upd${tab}ByFilter(${tab?uncap_first}Upd,${tab?uncap_first});			}		}		<#else>		if(StringUtils.isBlank(${tab?uncap_first}Upd.get<@getTableKeyForSetGet cols/>())){			<#list cols as col><#if col.primaryKey >${tab?uncap_first}Upd.set<@getTableKeyForSetGet cols/>(Utils.shortUUIDRandom());<#break></#if></#list>			<#-- ${tab?uncap_first}Upd.setCreateTime(new Date());有创建时间、更新时间项目使用，其他项目可删除 -->			${tab?uncap_first}Svc.add${tab}(${tab?uncap_first}Upd);		}else{			if(null!=${tab?uncap_first}Upd.get<@getTableKeyForSetGet cols/>()){				for(String t<@getTableKeyForSetGet cols/> : ${tab?uncap_first}Upd.get<@getTableKeyForSetGet cols/>().split(",")){					<#list cols as col><#if col.primaryKey >${tab?uncap_first}Upd.set<@getTableKeyForSetGet cols/>(t<@getTableKeyForSetGet cols/>);<#break></#if></#list>					${tab?uncap_first}Svc.upd${tab}ByPrimaryKey(${tab?uncap_first}Upd);					<#-- ${tab?uncap_first}Upd.setUpdateTime(new Date());有创建时间、更新时间项目使用，其他项目可删除 -->	//				${tab}  ${tab?uncap_first} = new ${tab}();		//更新数据过滤条件	//				${tab?uncap_first}Svc.upd${tab}ByFilter(${tab?uncap_first}Upd,${tab?uncap_first});				}			}		}		</#if>		mv.setViewName("redirect:/view/${tab?lower_case}/list");		return mv;	}		@Login(value=LoginResultReturnType.page,reqFromType=LoginRequestFromType.web)	@RequestMapping(value={"/",""})	public ModelAndView list(){		mv.setViewName(BaseController.webviewpath + ${tab}ViewController.path + "${tab?lower_case}_list");		return mv;	}		@Login(value=LoginResultReturnType.page,reqFromType=LoginRequestFromType.web)	@RequestMapping(value={"/",""}, consumes="application/json",produces="application/json")	public Map<String,Object> list(HttpServletRequest request){		Map<String,Object> resultMap = new HashMap<String,Object>();		Pagination page = new Pagination();		<#if hasExtendColumn>		${tab}Extend  ${tab?uncap_first} = new ${tab}Extend();		<#else>		${tab}  ${tab?uncap_first} = new ${tab}();		</#if>		rpbl.load(${tab?uncap_first},request);		rpbl.load(page,request);		page.setPageSize(15);				<#if (joinTables?size>0)>//		page =  ${tab?uncap_first}Svc.getAll${tab}ByPage(page,  ${tab?uncap_first});		page =  ${tab?uncap_first}Svc.getAll${tab}ByPageWithJoin(page, ${tab?uncap_first});//		List<${tab}> resultSk = ${tab?uncap_first}Svc.getAll${tab}BySearchKey(${tab?uncap_first}, searchCol);//		List<${tab}> resultSkJ = ${tab?uncap_first}Svc.getAll${tab}BySearchKeyWithJoin(${tab?uncap_first}, searchCol);		<#else>		page =  ${tab?uncap_first}Svc.getAll${tab}ByPage(page,  ${tab?uncap_first});//		List<${tab}> resultSk = ${tab?uncap_first}Svc.getAll${tab}BySearchKey(${tab?uncap_first}, searchCol);		</#if>				resultMap.put("page", page);		resultMap.put("${tab?uncap_first}", ${tab?uncap_first});		return resultMap;	}		@Login(value=LoginResultReturnType.page,reqFromType=LoginRequestFromType.web)	@RequestMapping(value={"/<@compress>{<@getTableKey cols/>}/modify"})</@compress>	public ModelAndView modify(@PathVariable("<@compress><@getTableKey cols/></@compress>")<@compress><@getTableKeyParam cols/></@compress>){		<#list joinTables as jt>		<#if jt.tableHaveChildColum==1>		mv.addObject("<@genAttributeByCol colName_ABC='${jt.tableCode?replace("^T_","","r")}' />Opt", <@genAttributeByCol colName_ABC='${jt.tableCode?replace("^T_","","r")}' />Svc.getAll<@genAttributeByForSetAndGet colName_ABFSAG='${jt.tableCode?replace("^T_","","r")}' />BySearchWithJoin(new <@genAttributeByForSetAndGet colName_ABFSAG='${jt.tableCode?replace("^T_","","r")}' />()));		<#else>		mv.addObject("<@genAttributeByCol colName_ABC='${jt.tableCode?replace("^T_","","r")}' />Opt", <@genAttributeByCol colName_ABC='${jt.tableCode?replace("^T_","","r")}' />Svc.getAll<@genAttributeByForSetAndGet colName_ABFSAG='${jt.tableCode?replace("^T_","","r")}' />BySearch(new <@genAttributeByForSetAndGet colName_ABFSAG='${jt.tableCode?replace("^T_","","r")}' />()));		</#if>		</#list>		${tab}  ${tab?uncap_first} = ${tab?uncap_first}Svc.get${tab}ByPrimaryKey(<@compress><@getTableKey cols/></@compress>);		mv.addObject("${tab?uncap_first}", ${tab?uncap_first});		mv.setViewName(BaseController.webviewpath + ${tab}ViewController.path + "${tab?lower_case}_modify");		return mv;	}		@Login(value=LoginResultReturnType.page,reqFromType=LoginRequestFromType.web)	@RequestMapping(value={"/<@compress>{<@getTableKey cols/>}"})</@compress>	public ModelAndView show(@PathVariable("<@compress><@getTableKey cols/></@compress>")<@compress><@getTableKeyParam cols/></@compress>){		<#if (joinTables?size>0)>		<#if hasExtendColumn>		${tab}  ${tab?uncap_first} = ${tab?uncap_first}Svc.get${tab}ByPrimaryKeyWithJoin(new ${tab}Extend(new ${tab}(<@compress><@getTableKey cols/></@compress>)));		<#else>		${tab}  ${tab?uncap_first} = ${tab?uncap_first}Svc.get${tab}ByPrimaryKeyWithJoin(new ${tab}(<@compress><@getTableKey cols/></@compress>));		</#if>		<#else>		${tab}  ${tab?uncap_first} = ${tab?uncap_first}Svc.get${tab}ByPrimaryKey(<@compress><@getTableKey cols/></@compress>);		</#if>		<#if (refCols?size>0)><#list refCols as col>//		${tab?uncap_first} = ${tab?uncap_first}Svc.addRef${col.type}(${tab?uncap_first});		</#list></#if>			mv.addObject("${tab?uncap_first}", ${tab?uncap_first});		mv.setViewName(BaseController.webviewpath + ${tab}ViewController.path + "${tab?lower_case}_show");		return mv;	}		@Login(value=LoginResultReturnType.page,reqFromType=LoginRequestFromType.web)	@RequestMapping(value="/<@compress>{<@getTableKey cols/>}/del")</@compress>	public ModelAndView del(@PathVariable("<@compress><@getTableKey cols/></@compress>")<@compress><@getTableKeyParam cols/></@compress>){		${tab?uncap_first}Svc.del${tab}ByPrimaryKey(<@compress><@getTableKey cols/></@compress>);//		${tab?uncap_first}Svc.del${tab}ByFilter(<@compress><@getTableKey cols/></@compress>);		mv.setViewName("redirect:/view/${tab?lower_case}/list");		return mv;	}}