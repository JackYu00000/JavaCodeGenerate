<#-- 生成列的属性名字  --><#macro genAttributeByCol colName_ABC><@compress single_line=true><#assign attribute=""><#list colName_ABC?split("_") as s><#if attribute!=""><#assign attribute="${attribute}${s?lower_case?cap_first}"></#if><#if attribute==""><#assign attribute="${attribute}${s?lower_case}"></#if></#list>${attribute}</@compress></#macro><#-- 生成列在Mapper中的列名，需要处理是否是Mysql关键字  --><#macro rewriteColInMysql colCode_RCIM><@compress single_line=true><#assign isMysqlKey=false /><#assign c=['ADD','ALL','ALTER','ANALYZE','AND','AS','ASC','ASENSITIVE','BEFORE','BETWEEN','BIGINT','BINARY','BLOB','BOTH','BY','CALL','CASCADE','CASE','CHANGE','CHAR','CHARACTER','CHECK','COLLATE','COLUMN','CONDITION','CONNECTION','CONSTRAINT','CONTINUE','CONVERT','CREATE','CROSS','CURRENT_DATE','CURRENT_TIME','CURRENT_TIMESTAMP','CURRENT_USER','CURSOR','DATABASE','DATABASES','DAY_HOUR','DAY_MICROSECOND','DAY_MINUTE','DAY_SECOND','DEC','DECIMAL','DECLARE','DEFAULT','DELAYED','DELETE','DESC','DESCRIBE','DETERMINISTIC','DISTINCT','DISTINCTROW','DIV','DOUBLE','DROP','DUAL','EACH','ELSE','ELSEIF','ENCLOSED','ESCAPED','EXISTS','EXIT','EXPLAIN','FALSE','FETCH','FLOAT','FLOAT4','FLOAT8','FOR','FORCE','FOREIGN','FROM','FULLTEXT','GOTO','GRANT','GROUP','HAVING','HIGH_PRIORITY','HOUR_MICROSECOND','HOUR_MINUTE','HOUR_SECOND','IF','IGNORE','IN','INDEX','INFILE','INNER','INOUT','INSENSITIVE','INSERT','INT','INT1','INT2','INT3','INT4','INT8','INTEGER','INTERVAL','INTO','IS','ITERATE','JOIN','KEY','KEYS','KILL','LABEL','LEADING','LEAVE','LEFT','LIKE','LIMIT','LINEAR','LINES','LOAD','LOCALTIME','LOCALTIMESTAMP','LOCK','LONG','LONGBLOB','LONGTEXT','LOOP','LOW_PRIORITY','MATCH','MEDIUMBLOB','MEDIUMINT','MEDIUMTEXT','MIDDLEINT','MINUTE_MICROSECOND','MINUTE_SECOND','MOD','MODIFIES','NATURAL','NOT','NO_WRITE_TO_BINLOG','NULL','NUMERIC','ON','OPTIMIZE','OPTION','OPTIONALLY','OR','ORDER','OUT','OUTER','OUTFILE','PRECISION','PRIMARY','PROCEDURE','PURGE','RAID0','RANGE','READ','READS','REAL','REFERENCES','REGEXP','RELEASE','RENAME','REPEAT','REPLACE','REQUIRE','RESTRICT','RETURN','REVOKE','RIGHT','RLIKE','SCHEMA','SCHEMAS','SECOND_MICROSECOND','SELECT','SENSITIVE','SEPARATOR','SET','SHOW','SMALLINT','SPATIAL','SPECIFIC','SQL','SQLEXCEPTION','SQLSTATE','SQLWARNING','SQL_BIG_RESULT','SQL_CALC_FOUND_ROWS','SQL_SMALL_RESULT','SSL','STARTING','STRAIGHT_JOIN','TABLE','TERMINATED','THEN','TINYBLOB','TINYINT','TINYTEXT','TO','TRAILING','TRIGGER','TRUE','UNDO','UNION','UNIQUE','UNLOCK','UNSIGNED','UPDATE','USAGE','USE','USING','UTC_DATE','UTC_TIME','UTC_TIMESTAMP','VALUES','VARBINARY','VARCHAR','VARCHARACTER','VARYING','WHEN','WHERE','WHILE','WITH','WRITE','X509','XOR','YEAR_MONTH','ZEROFILL']> <#list c as v> <#if colCode_RCIM?upper_case==v><#assign isMysqlKey=true /><#break></#if></#list><#if isMysqlKey>`${colCode_RCIM}`<#else>${colCode_RCIM}</#if></@compress></#macro><#-- 生成列的set、get后面的名  --><#macro genAttributeByForSetAndGet colName_ABFSAG><@compress single_line=true><#assign attribute=""><#list colName_ABFSAG?split("_") as s><#assign attribute="${attribute}${s?lower_case?cap_first}"></#list>${attribute}</@compress></#macro><#-- 根据列名，获取列的类型，用户生成测试代码 --><#macro genTypeByColName colName_TBCN columns_TBCN><@compress single_line=true><#list columns_TBCN as col><#if (col.code==colName_TBCN)>${col.type}<#break></#if></#list></@compress></#macro><#-- 根据列，获取jsp页面上显示的列title--><#macro genColTitle column_CT><@compress single_line=true><#if (column_CT.inSelfTable)><#if (column_CT.joinTables!?size>0)>${column_CT.name?replace("ID","","r")}<#else>${column_CT.name}</#if><#else><#if (column_CT.name?index_of("_")>-1)><#if (column_CT.name?split("_")?size=3)>${column_CT.name?split("_")[0]?replace("ID","","r")}${column_CT.name?split("_")[2]}<#else>${column_CT.name?split("_")[0]?replace("ID","","r")}</#if><#else>${column_CT.name}</#if></#if></@compress></#macro><#-- 判断传入的列，是否可以作为查询列  --><#function checkColSearch colName_CS><#if (colName_CS?ends_with('_CHNVAL'))><#return false><#else><#return true></#if></#function><#-- 判断列，是否在mapper中，有对应的输出字段  --><#function checkColWriteToMapper colName_CWTM><#if (colName_CWTM=='ORDER_BYS' || colName_CWTM=='GROUP_BYS' || colName_CWTM=='SEARCH_KEY' || colName_CWTM=='SEARCH_COLS' || colName_CWTM=='SELECT_COLS' || colName_CWTM=='UPDATE_IN_SQL_COL_TYPE' || colName_CWTM=='COMPARE_COLS')><#return false><#elseif (colName_CWTM?ends_with('_MULTS') || colName_CWTM?ends_with('_GREATER_Than') || colName_CWTM?ends_with('_LESS_Than') || colName_CWTM?ends_with('_BETWEEN_TYPE'))><#return false><#else><#return true></#if></#function><#-- 判断列，是否在mapper中，有对应的输出字段  --><#function getColCompares colName_GCC><#assign colCompares=0 /><#list cols as col>	<#if ((!col.primaryKey && col.inTableColumn) || (col.primaryKey && col.inSelfTable))><#assign colInteger>${checkColTypeIsToJavaNotString(col.type)?string}</#assign>	<#if colInteger=='true' || col.type?upper_case?contains("DATE")><#assign colCode><@genAttributeByCol colName_ABC='${col.code}'/></#assign>		<#assign colCompares=colCompares+1 />			</#if></#if></#list><#return colCompares></#function><#-- 判断列属性，在java中对应的是否是Integer  --><#function checkColTypeIsToJavaInteger colType_CTITJI><#if colType_CTITJI?upper_case?starts_with("SMALLINT")><#return true><#elseif colType_CTITJI?upper_case?starts_with("MEDIUMINT")><#return true><#elseif colType_CTITJI?upper_case?starts_with("INT")><#return true><#elseif colType_CTITJI?upper_case?starts_with("TINYINT")><#return true><#else><#return false></#if></#function><#-- 判断列属性，在java中对应的是否是数字类型  --><#function checkColTypeIsToJavaNotString col_CTITJNS><#assign colInteger>${checkColTypeIsToJavaInteger(col_CTITJNS)?string}</#assign><#if colInteger=='true'><#return true><#elseif col_CTITJNS?upper_case?starts_with("DECIMAL")><#return true><#elseif col_CTITJNS?upper_case?starts_with("BIGINT")><#return true><#elseif col_CTITJNS?upper_case?starts_with("FLOAT")><#return true><#else><#return false></#if></#function><#-- 返回列在java中对应的类型  --><#macro getColJavaType col_CJT><@compress single_line=true><#assign colInteger>${checkColTypeIsToJavaInteger(col_CJT.type)?string}</#assign><#if colInteger=='true'><@rewriteColType col_CJT.typeExpend "Integer" /><#elseif col_CJT.type?upper_case?starts_with("DATE")><@rewriteColType col_CJT.typeExpend "java.util.Date" /><#elseif col_CJT.type?upper_case?starts_with("TIME")><@rewriteColType col_CJT.typeExpend "java.sql.Time" /><#elseif col_CJT.type?upper_case?starts_with("BIGINT")><@rewriteColType col_CJT.typeExpend "Long" /><#elseif col_CJT.type?upper_case?starts_with("BOOL")><@rewriteColType col_CJT.typeExpend "Boolean" /><#elseif col_CJT.type?upper_case?starts_with("DECIMAL")><@rewriteColType col_CJT.typeExpend "Double" /><#elseif col_CJT.type?upper_case?starts_with("NUMBER")>	<@rewriteColType col_CJT.typeExpend "Double" /><#elseif col_CJT.type?upper_case?starts_with("NUMERIC")>	<@rewriteColType col_CJT.typeExpend "Double" /><#elseif col_CJT.type?upper_case?starts_with("FLOAT")><@rewriteColType col_CJT.typeExpend "Float" /><#elseif (col_CJT.type=="LinkedHashMap<String, String>")><@rewriteColType col_CJT.typeExpend "LinkedHashMap<String, String>" /><#elseif (col_CJT.type?upper_case?starts_with("MAP<"))><@rewriteColType col_CJT.typeExpend col_CJT.type /><#elseif (col_CJT.type?upper_case?contains("CHAR") || col_CJT.type?upper_case?contains("VARCHAR") || col_CJT.type?upper_case?contains("TEXT") || col_CJT.type?upper_case?contains("STRING"))><@rewriteColType col_CJT.typeExpend "String" /><#else><@rewriteColType col_CJT.typeExpend col_CJT.type?upper_case /></#if></@compress></#macro><#-- 根据列数据类型，判断是否输出json 日期格式化处理标签 --><#macro writeJacksonSerializer col_JS><#if col_JS.type?upper_case?contains("DATE")>	@JSONField(format="yyyy-MM-dd")	@JsonFormat(timezone = "GMT+8", pattern = "yyyy-MM-dd")<#elseif col_JS.type?upper_case?starts_with("TIME")>	@JSONField(format="hh:mm:ss")	@JsonFormat(timezone = "GMT+8", pattern = "hh:mm:ss")<#else></#if></#macro><#-- 给java对象，包装类型，如Array，List等 --><#macro rewriteColType expend_CT type_CT><#if (expend_CT=="Array")>${type_CT}[]<#elseif (expend_CT=="List")>List<${type_CT}><#else>${type_CT}</#if></#macro><#-- 从列中，返回表主键属性名，大写头字母，用于set，get --><#macro getTableKeyForSetGet columns_TKFSG><@compress single_line=true><#assign sget><#list columns_TKFSG as col><#if (col.primaryKey)><@genAttributeByCol colName_ABC='${col.code}'/><#break></#if></#list></#assign>${sget?cap_first}</@compress></#macro><#-- 从列中，返回表第M个非主键列作为更新属性名，手写头字母，用于set，get，测试代码使用，M从1开始 --><#macro getTableUpdFirstColForSetGet columns_TUFCFSG colidx_TUFCFSG><@compress single_line=true><#assign sget><#list columns_TUFCFSG as col><#if (col_index=colidx_TUFCFSG)><@genAttributeByCol colName_ABC='${col.code}'/><#break></#if></#list></#assign>${sget?cap_first}</@compress></#macro><#-- 从列中，返回表主键个数是否大于1个 --><#function tableHasMultKeys columns_HMK><#assign multKey=false /><#assign keyCount=0 /><#list columns_HMK as col><#if (col.primaryKey && col.inSelfTable)><#if (keyCount>1)><#assign multKey=true /><#break></#if><#assign keyCount=keyCount+1 /></#if></#list><#return multKey></#function><#-- 从列中，返回表第一个主键col --><#macro getTableKeyColFirst columns_TKCF><#list columns_TKCF as col><#if (col.primaryKey)>col<#break></#if></#list></#macro><#macro getTableKeyColFirstCode columns_TKCFC><#list columns_TKCFC as col><#if (col.primaryKey)>${col.code}<#break></#if></#list></#macro><#-- 从列中，返回表主键，在java中属性名 --><#macro getTableKey columns_TK><#list columns_TK as col><#if (col.primaryKey)><@genAttributeByCol colName_ABC='${col.code}'/><#break></#if></#list></#macro><#-- 从列中，返回表主键，在java中数据类 --><#macro getTableKeyJavaType columns_TKJT><#list columns_TKJT as col><#if (col.primaryKey)><@getColJavaType col /><#break></#if></#list></#macro><#-- 从列中，返回表主键数据，在数据库中数据类型 --><#macro getTableKeyType columns_TKT><#list columns_TKT as col><#if (col.primaryKey)>${col.type}<#break></#if></#list></#macro><#-- 从列中，返回表主键数据类型 变量名，String id 只返回第一个  --><#macro getTableKeyParamFirst columns_TKPF><#list columns_TKPF as col><#if (col.primaryKey && col.inSelfTable)><@getColJavaType col /> <@genAttributeByCol colName_ABC='${col.code}'/><#break></#if></#list></#macro><#-- 从列中，返回表主键数据类型，变量名  String id,Integer orderId--><#macro getTableKeyParam columns_TKP><#list columns_TKP as col><#if (col.primaryKey && col.inSelfTable)><#if (col_index>0)>, </#if><@getColJavaType col /> <@genAttributeByCol colName_ABC='${col.code}'/></#if></#list></#macro><#-- 判断是否有弹出页面  --><#function showWithDialog columns_WD><#assign tableColumnsSize=0 /><#list columns_WD as col><#if (col.inSelfTable)><#assign tableColumnsSize=tableColumnsSize+1 /></#if></#list><#if (tableColumnsSize<6)><#return true><#else><#return false></#if></#function><#-- 生成import语句  --><#macro getImport cols_I packname_I refCols_I joinTables_I><#-- import java.util.Date;有创建时间、更新时间项目使用，其他项目可删除 --><#list cols_I as col><#if (col.primaryKey && col.inSelfTable)><#if (col.type?upper_case?starts_with("VARCHAR"))>import com.is.web.common.utils.Utils;</#if></#if></#list>import org.apache.commons.lang3.StringUtils;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import jodd.bean.loader.RequestParamBeanLoader;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.servlet.ModelAndView;import org.apache.logging.log4j.LogManager;import org.apache.logging.log4j.Logger;import ${packname_I}.web.Pagination;import ${packname_I}.web.annotation.Login;import ${packname_I}.web.LoginResultReturnType;import ${packname_I}.web.LoginRequestFromType;import ${packname_I}.entityentity.${tab};import ${packname_I}.entityextend.${tab}Extend;import ${packname_I}.entityvojo.${tab}Vojo;import ${packname_I}.services.${tab}Service;</#macro><#-- 生成Service 层 import语句  --><#macro getImportInterface cols_II packname_II refCols_II><#-- import java.util.Date;有创建时间、更新时间项目使用，其他项目可删除 --><#list cols_II as col><#if (col.primaryKey && col.inSelfTable)><#assign colInteger>${checkColTypeIsToJavaNotString(col.type)?string}</#assign><#if colInteger=='false'>import org.apache.commons.lang3.StringUtils;import com.is.web.common.utils.Utils;</#if><#break></#if></#list>import java.util.Map;import java.io.IOException;import javax.annotation.Resource;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.apache.logging.log4j.LogManager;import org.apache.logging.log4j.Logger;import ${packname_II}.entity.runtime.ResponseErrorMsg;import ${packname_II}.web.Pagination;import ${packname_II}.web.annotation.Login;import ${packname_II}.web.LoginResultReturnType;import ${packname_II}.web.LoginRequestFromType;import ${packname_II}.entityentity.${tab};import ${packname_II}.entityvojo.${tab}Vojo;import ${packname_II}.services.${tab}Service;</#macro><#-- 扩展字段添加值、检索时，用于显示数据，如：用户id字段，可以显示下拉列表，进行添加、查询 --><#-- 关联数据字段查询、追加使用，如：给文件标题信息追加内容信息 --><#-- 信息排重 --><#function genJoinAndRefImportBaseDataList joinTables_JARIBDL refCols_JARIBDL><#assign serviceliststr="" /><#assign servicelist="" /><#list refCols_JARIBDL as col><#if (serviceliststr?length>0)><#assign serviceliststr= serviceliststr + "," /></#if><#assign serviceliststr= serviceliststr + "" + col.type + ":ref" /></#list><#list joinTables_JARIBDL as jt><#assign jtTableName><@genAttributeByForSetAndGet colName_ABFSAG='${jt.tableCode?replace("^T_","","r")}' /></#assign><#if (serviceliststr?length>0)><#assign serviceliststr= serviceliststr + "," /></#if><#assign serviceliststr= serviceliststr + "" + jtTableName + ":join" /></#list><#assign servicelist="" /><#list serviceliststr?split(",") as service>	<#assign isrepeat=2 />	<#list servicelist?split(",") as serviceIn>		<#if (service?split(":")[0]==serviceIn?split(":")[0] && service_index!=serviceIn_index)>			<#assign isrepeat = 1 />			<#break>		</#if>	</#list>	<#if (isrepeat==2)>		<#if (servicelist?length>0)>			<#assign servicelist = servicelist + ",">		</#if>		<#assign servicelist = servicelist + service>	</#if></#list><#return servicelist></#function><#-- 生成import。 --><#macro genJoinAndRefImport joinTables_JARI refCols_JARI><#if (refCols_JARI?size>0)>import java.util.List;</#if><#assign serviceList>${genJoinAndRefImportBaseDataList(joinTables_JARI,refCols_JARI)}</#assign><#if (serviceList!="")><#list serviceList?split(",") as service>import ${packname}.services.${service?split(":")[0]}Service;<#--<#if (service?split(':')[1]=="join")>import ${packname}.entityentity.${service?split(":")[0]};</#if> --></#list></#if><#if (refCols_JARI?size>0)><#list refCols_JARI as col_JARI><#if (col_JARI.typeExpend?upper_case=="LIST")>import ${packname}.entityentity.${col_JARI.type};<#if (col_JARI.fatherTableHasJoin)>import ${packname}.entityextend.${col_JARI.type}Extend;</#if></#if></#list></#if></#macro><#-- 声明应用。 --><#macro genJoinAndRefService joinTables_JARS refCols_JARS><#assign serviceList>${genJoinAndRefImportBaseDataList(joinTables_JARS,refCols_JARS)}</#assign><#if (serviceList!="")><#list serviceList?split(",") as service>	@Resource	private ${service?split(":")[0]}Service ${service?split(":")[0]?uncap_first}Svc;	</#list></#if></#macro><#-- 生成导入Select 数据的代码，已经改为页面通过Ajax引用，暂不需要。 --><#macro genOptionAddObject joinTables_OAO><#list joinTables_OAO as jt><#if jt.tableHaveChildColum==1>		mv.addObject("<@genAttributeByCol colName_ABC='${jt.tableCode?replace("^T_","","r")}' />Opt", <@genAttributeByCol colName_ABC='${jt.tableCode?replace("^T_","","r")}' />Svc.getAll<@genAttributeByForSetAndGet colName_ABFSAG='${jt.tableCode?replace("^T_","","r")}' />BySearchWithJoin(new <@genAttributeByForSetAndGet colName_ABFSAG='${jt.tableCode?replace("^T_","","r")}' />()));<#else>		mv.addObject("<@genAttributeByCol colName_ABC='${jt.tableCode?replace("^T_","","r")}' />Opt", <@genAttributeByCol colName_ABC='${jt.tableCode?replace("^T_","","r")}' />Svc.getAll<@genAttributeByForSetAndGet colName_ABFSAG='${jt.tableCode?replace("^T_","","r")}' />BySearch(new <@genAttributeByForSetAndGet colName_ABFSAG='${jt.tableCode?replace("^T_","","r")}' />()));</#if></#list></#macro><#-- 从列中，返回表主键属性名 --><#macro getJsonIgnoreColumn columns_SJC><@compress single_line=true><#assign colStr="" /><#list refCols as col><#assign colAttr><@genAttributeByCol colName_ABC='${col.code}'/></#assign>	<#if colStr=="">	<#assign colStr="\"${colAttr}\"" />	<#else>	<#assign colStr="${colStr},\"${colAttr}\"" />	</#if></#list><#list cols as col><#if (!col.primaryKey && !col.inTableColumn)><#assign colAttr><@genAttributeByCol colName_ABC='${col.code}'/></#assign>	<#if colStr=="">	<#assign colStr="\"${colAttr}\"" />	<#else>	<#assign colStr="${colStr},\"${colAttr}\"" />	</#if>	</#if></#list>${colStr}</@compress></#macro><#-- 从列中，返回表应用其他表数据的列，jsp页面使用 --><#macro getOptionColumn columns_OC><@compress single_line=true><#assign colStr="" /><#list columns_OC as col><#if (col.comment!?index_of("OPTION")>-1 || col.joinTables!?size>0)>	<#assign colAttr><@genAttributeByCol colName_ABC='${col.code}'/>:${col.name}</#assign>	<#if colStr="">		<#assign colStr="${colAttr}" />	<#else>		<#assign colStr="${colStr},${colAttr}" />	</#if></#if></#list>${colStr}</@compress></#macro><#-- 从列中，返回表应用其他表数据的列中的第一个，jsp页面使用 --><#macro getOptionColumnFirst columns_OCF><@compress single_line=true><#assign colStr="" /><#list columns_OCF as col><#if (col.comment!?index_of("OPTION")>-1 || col.joinTables!?size>0)>	<#assign colAttr><@genAttributeByCol colName_ABC='${col.code}'/></#assign>	<#assign colStr="${colAttr}" />	<#break></#if></#list>${colStr}</@compress></#macro><#-- 返回表中可以显示的列，jsp页面使用  --><#macro getShowColumn cols_SC><@compress single_line=true><#assign colStr="" /><#list cols_SC as col><#if (!col.primaryKey && col.inTableColumn)><#assign colAttr><@genAttributeByCol colName_ABC='${col.code}'/>:${col.name}</#assign>	<#if colStr="">	<#assign colStr="${colAttr}" />	<#else>	<#assign colStr="${colStr},${colAttr}" />	</#if>	</#if></#list>${colStr}</@compress></#macro><#function columnHasAddStrCol column_HASC><#assign hasHDT=false /><#list column_HASC as col_HASC><#assign colInteger>${checkColTypeIsToJavaNotString(col_HASC.type?upper_case)?string}</#assign><#if (colInteger?upper_case=="TRUE")><#assign hasHDT=true /><#break></#if></#list><#return hasHDT></#function><#-- 从列中，返回表是否包含类型为DATE的列 --><#function columnHasDateType columns_HDT><#assign hasHDT=false /><#list columns_HDT as col_HDT><#if (col_HDT.type?upper_case=="DATE")><#assign hasHDT=true /><#break></#if></#list><#return hasHDT></#function><#-- 从列中，返回表是否包含类型为DATETIME的列 --><#function columnHasDateTimeType columns_HDTT><#assign hasHDTT=false /><#list columns_HDTT as col_HDTT><#if (col_HDTT.type?upper_case=="DATETIME")><#assign hasHDTT=true /><#break></#if></#list><#return hasHDTT></#function><#-- 从列中，返回表是否包含类型为TIME的列 --><#function columnHasTimeType columns_HTT><#assign hasHTT=false /><#list columns_HTT as col_HTT><#if (col_HTT.type?upper_case=="TIME")><#assign hasHTT=true /><#break></#if></#list><#return hasHTT></#function><#-- 返回列是否是字典值的显示列，以Chnval结尾 --><#function columnIsChnvalType col_HCT><#assign hasHCT=false /><#if (col_HCT.code?upper_case?ends_with("CHNVAL"))><#assign hasHCT=true /></#if><#return hasHCT></#function><#-- 返回数据列中，是否有option类型 --><#function checkColHasOption cols_CHO><#assign result=false /><#list cols_CHO as col>	<#if (col.inTableColumn)>		<#if ((col.primaryKey && col.inSelfTable) || !col.primaryKey)>			<#if (col.comment!?index_of("CHECKBOX")>-1 || col.comment!?index_of("OPTION")>-1 || col.joinTables!?size>0 || col.comment!?index_of("RADIO")>-1)>				<#assign result=true><#break>			</#if>		</#if>	</#if></#list><#return result></#function><#-- 返回数据列中，是否有checkbox类型 --><#function getColHasCheckbox cols_CHC>	<#assign result=false />							<#list cols_CHC as col>	<#if (col.inTableColumn)>		<#if ((col.primaryKey && col.inSelfTable) || !col.primaryKey)>			<#if (col.comment!?index_of("CHECKBOX")>-1)>				<#assign result=true /><#break>							</#if>									</#if>	</#if></#list><#return result></#function><#-- 返回数据列中，是否有radio类型 --><#function getColHasRadio cols_CHR>	<#assign result=false />							<#list cols_CHR as col>	<#if (col.inTableColumn)>		<#if ((col.primaryKey && col.inSelfTable) || !col.primaryKey)>			<#if (col.comment!?index_of("RADIO")>-1)>				<#assign result=true /><#break>							</#if>									</#if>	</#if></#list><#return result></#function><#-- 返回数据列中，是否有date类型 --><#function getColHasDate cols_CHD>	<#assign result=false />							<#list cols_CHD as col>	<#if (col.inTableColumn)>		<#if ((col.primaryKey && col.inSelfTable) || !col.primaryKey)>			<#if (col.type?upper_case=="DATE")>				<#assign result=true /><#break>													<#elseif (col.type?upper_case=="DATETIME")>				<#assign result=true /><#break>											<#elseif (col.type?upper_case=="TIME")>				<#assign result=true /><#break>							</#if>									</#if>	</#if></#list><#return result></#function><#-- 生成字段在jsp中显示用的jstl代码,${tab_ESJJT.col_ESJJT}--><#macro genEntityShowJspJstlTag tab_ESJJT col_ESJJT><#if (col_ESJJT.type?upper_case=="DATE")>		<fmt:formatDate value='<#noparse>${</#noparse>${tab_ESJJT?uncap_first}.<@genAttributeByCol colName_ABC='${col_ESJJT.code}'/><#noparse>}</#noparse>' pattern="yyyy-MM-dd" /><#elseif (col_ESJJT.type?upper_case=="TIME")>		<fmt:formatDate value='<#noparse>${</#noparse>${tab_ESJJT?uncap_first}.<@genAttributeByCol colName_ABC='${col_ESJJT.code}'/><#noparse>}</#noparse>' type="time" /><#elseif (col_ESJJT.type?upper_case=="DATETIME")>		<fmt:formatDate value='<#noparse>${</#noparse>${tab_ESJJT?uncap_first}.<@genAttributeByCol colName_ABC='${col_ESJJT.code}'/><#noparse>}</#noparse>' type="both" /><#elseif (col_ESJJT.comment!?index_of("CHECKBOX")>-1)>	<c:choose>	<#assign tcomment="${col_ESJJT.comment!?replace('.*CHECKBOX_','','r')}" />	<#list tcomment?split(",") as s>		<#if (s?contains(":"))>			<c:when test="<#noparse>$</#noparse>{${tab_ESJJT?uncap_first}.<@genAttributeByCol colName_ABC='${col_ESJJT.code}'/>==<#if col_ESJJT.type?upper_case?contains("DECIMAL") || col_ESJJT.type?upper_case?contains("INT")>${s?split(":")?first}<#else>'${s?split(":")?first}'</#if>}}">				${s?split(":")?last}			</c:when>		<#else>			<c:otherwise>				${s?trim}			</c:otherwise>		</#if>	</#list>	</c:choose><#elseif (col_ESJJT.comment!?index_of("RADIO")>-1)>	<c:choose>	<#assign tcomment="${col_ESJJT.comment!?replace('.*RADIO_','','r')}" />	<#list tcomment?split(",") as s>		<#if (s?contains(":"))>			<c:when test="<#noparse>$</#noparse>{${tab_ESJJT?uncap_first}.<@genAttributeByCol colName_ABC='${col_ESJJT.code}'/>==<#if col_ESJJT.type?upper_case?contains("DECIMAL") || col_ESJJT.type?upper_case?contains("INT")>${s?split(":")?first}<#else>'${s?split(":")?first}'</#if>}">				${s?split(":")?last}			</c:when>		<#else>			<c:otherwise>				${s?trim}			</c:otherwise>		</#if>	</#list>	</c:choose><#elseif (col_ESJJT.comment!?index_of("OPTION")>-1 || col_ESJJT.joinTables!?size>0)>	<#if (col_ESJJT.joinTableShow!?index_of(",")>-1)>		<@compress single_line=true>		<#list col_ESJJT.joinTableShow?split(",") as s>		<#noparse>$</#noparse>{${tab_ESJJT?uncap_first}.<@genAttributeByCol colName_ABC='${col_ESJJT.code}'/>${s?cap_first}}，		</#list></@compress>	<#else>		<#list col_ESJJT.joinTables! as col_ESJJTjt><#if (col_ESJJTjt_index>0)><%--</#if><#list col_ESJJTjt.joinTableShow?split(",") as col_ESJJTjtintem><#noparse>$</#noparse>{${tab_ESJJT?uncap_first}.<@genAttributeByCol colName_ABC='${col_ESJJT.code}'/>${col_ESJJTjtintem?cap_first}}</#list><#if (col_ESJJTjt_index>0)> --%></#if></#list>	</#if><#else><#noparse>$</#noparse>{${tab_ESJJT?uncap_first}.<@genAttributeByCol colName_ABC='${col_ESJJT.code}'/>}</#if> </#macro><#-- 返回表中可以显示的列，jsp页面使用  --><#macro genColCompareStrs cols isSelfTable><#assign colStr="" /><#assign compareFirst=true /><#list cols as col><#assign checkVal=col.inSelfTable /><#if isSelfTable><#assign checkVal=isSelfTable /></#if><#if (col.inSelfTable==checkVal && col.inTableColumn)><#assign colInteger>${checkColTypeIsToJavaNotString(col.type)?string}</#assign><#assign colAttr><@genAttributeByCol colName_ABC='${col.code}'/></#assign><#if colInteger=='true'>	<#assign colStrTmp><#if !compareFirst> || </#if>StringUtils.equals(searchCol, "${colAttr}")</#assign>	<#assign colStr="${colStr}${colStrTmp}" />	<#assign compareFirst=false />	</#if></#if></#list>${colStr}</#macro>