<#include "function.ftl">package ${packname}.mapper;import java.util.List;import java.util.Map;import org.apache.ibatis.annotations.Param;<#if (!isView || code?starts_with("SQLVW_") || code?starts_with("SQLVVW_"))>import ${packname}.entity.${tab};</#if><#if (isView && !code?starts_with("SQLVW_") && !code?starts_with("SQLVVW_"))>import ${packname}.entity.extend.${tab}Extend;</#if>/** * ${name} */<#if (!isView)>public interface ${tab}Mapper {<#if (!code?starts_with("SQLVW_") && !code?starts_with("SQLVVW_"))>		/**	 * 添加一条新<b>${name}</b>记录	 * @param ${tab?uncap_first} <i>${tab}</i>	 * @return int	 */	public int add${tab}(@Param(value="${tab?uncap_first}")${tab} ${tab?uncap_first});		/**	 * 根据主键删除一条<b>${name}</b>记录	 * @param <#list cols as col><#if (col.primaryKey && col.inSelfTable)><@genAttributeByCol colName_ABC='${col.code}'/></#if></#list> <i><#list cols as col><#if (col.primaryKey && col.inSelfTable)><@getColJavaType col /><#break></#if></#list></i>	 * @return void	 *///	public void del${tab}ByPrimaryKey(@Param(value="<@compress><@getTableKey cols/></@compress>")<@compress><@getTableKeyParamFirst cols/></@compress>);		/**	 * 根据主键更新一条新<b>${name}</b>记录	 * @param ${tab?uncap_first}Upd <i>${tab} 更新内容</i>	 * @return int	 */	public int upd${tab}ByPrimaryKey(@Param(value="${tab?uncap_first}")${tab} ${tab?uncap_first}Upd);	</#if>		/**	 * 根据sql语句进行查询	 * @param ${tab?uncap_first} <i>${tab}</i>	 * @param selectParam 检索内容	 * @return Map	 */	public List<Map> getResultForSelectParamBySearch(@Param(value="selectParam")String selectParam,@Param(value="${tab?uncap_first}")${tab} ${tab?uncap_first});		/**	 * 根据sql语句进行查询，自行拼凑select之后的完整sql语句	 * @param selectParam 检索内容	 * @return Map	 */	public List<Map> getResultForSelectParam(@Param(value="selectParam")String selectParam);		/**	 * 根据主键，获取一条<b>${name}</b>记录内容	 * @param ${tab?uncap_first} <i><#list cols as col><#if (col.primaryKey && col.inSelfTable)><@getColJavaType col /><#break></#if></#list></i>	 * @return ${tab}	 */	public ${tab} get${tab}ByPrimaryKey(@Param(value="${tab?uncap_first}")${tab} ${tab?uncap_first});		/**	 * 根据条件，查询全部<b>${name}</b>记录	 * @param ${tab?uncap_first} <i>${tab}</i>	 * @return List<${tab}>	 */	public List<${tab}> getAll${tab}BySearch(@Param(value="${tab?uncap_first}")${tab} ${tab?uncap_first});		/**	 * 根据关键字对指定列进行查询，查询全部<b>${name}</b>记录	 * @param ${tab?uncap_first}List <i>List<${tab}></i> 需要查询列名称、值	 * @return List<${tab}>	 */	public List<${tab}> getAll${tab}BySearchKey(@Param(value="${tab?uncap_first}List")List<${tab}> ${tab?uncap_first}List);		/**	 * 根据条件，查询<b>${name}</b>记录，带有分页	 * @param startIndex <i>int</i>	 * @param endIndex <i>int</i>	 * @param ${tab?uncap_first} <i>${tab}</i>	 * @return List<${tab}>	 */	public List<${tab}> getAll${tab}ByPage(@Param(value="startIndex")int startIndex,			  @Param(value="endIndex")int endIndex,@Param(value="${tab?uncap_first}")${tab} ${tab?uncap_first});		/**	 * 根据条件，查询符合条件<b>${name}</b>记录总数	 * @param ${tab?uncap_first}	 * @return int	 */	public int getCountForPage(@Param(value="${tab?uncap_first}")${tab} ${tab?uncap_first});	/**	 * 根据关键字对指定列进行查询，查询全部<b>${name}</b>记录	 * @param startIndex <i>int</i>	 * @param endIndex <i>int</i>	 * @param ${tab?uncap_first}List <i>List<${tab}></i> 查询列名称、值	 * @return List<${tab}>	 */	public List<${tab}> getAll${tab}WithSearchKeyByPage(@Param(value="startIndex")int startIndex,			  @Param(value="endIndex")int endIndex,@Param(value="${tab?uncap_first}List")List<${tab}> ${tab?uncap_first}List);		/**	 * 根据关键字，查询多列数据<b>${name}</b>记录总数	 * @param ${tab?uncap_first}List <i>List<${tab}></i> 查询列名称、值	 * @return int	 */	public int getCountWithSearchKeyForPage(@Param(value="${tab?uncap_first}List")List<${tab}> ${tab?uncap_first}List);</#if><#if (isView)><#if (code?starts_with("SQLVW_") || code?starts_with("SQLVVW_"))>public interface ${tab}Mapper {	/**	 * 根据sql语句进行查询，用户计算	 * @param ${tab?uncap_first} <i>${tab}</i>	 * @param String 检索内容	 * @return Map	 */	public List<Map> getResultForSelectParamBySearch(@Param(value="selectParam")String selectParam,@Param(value="${tab?uncap_first}")${tab} ${tab?uncap_first});		/**	 * 根据sql语句进行查询，自行拼凑select之后的完整sql语句	 * @param String 检索内容	 * @return Map	 */	public List<Map> getResultForSelectParam(@Param(value="selectParam")String selectParam);		/**	 * 根据主键，获取一条<b>${name}</b>记录内容	 * @param <#list cols as col><#if (col.primaryKey && col.inSelfTable)><@genAttributeByCol colName_ABC='${col.code}'/></#if></#list> <i><#list cols as col><#if (col.primaryKey && col.inSelfTable)><@getColJavaType col /><#break></#if></#list></i>	 * @return ${tab}	 */	public ${tab} get${tab}ByPrimaryKey(@Param(value="${tab?uncap_first}")${tab} ${tab?uncap_first});		/**	 * 根据条件，查询全部<b>${name}</b>记录	 * @param ${tab?uncap_first} <i>${tab}</i>	 * @return List<${tab}>	 */	public List<${tab}> getAll${tab}BySearch(@Param(value="${tab?uncap_first}")${tab} ${tab?uncap_first});		/**	 * 根据关键字对指定列进行查询，查询全部<b>${name}</b>记录	 * @param ${tab?uncap_first}List <i>List<${tab}></i> 需要查询列名称、值	 * @return List<${tab}>	 */	public List<${tab}> getAll${tab}BySearchKey(@Param(value="${tab?uncap_first}List")List<${tab}> ${tab?uncap_first}List);		/**	 * 根据条件，查询<b>${name}</b>记录，带有分页	 * @param startIndex <i>int</i>	 * @param endIndex <i>int</i>	 * @param ${tab?uncap_first} <i>${tab}</i>	 * @return List<${tab}>	 */	public List<${tab}> getAll${tab}ByPage(@Param(value="startIndex")int startIndex,			  @Param(value="endIndex")int endIndex,@Param(value="${tab?uncap_first}")${tab} ${tab?uncap_first});		/**	 * 根据条件，查询符合条件<b>${name}</b>记录总数	 * @param ${tab?uncap_first}	 * @return int	 */	public int getCountForPage(@Param(value="${tab?uncap_first}")${tab} ${tab?uncap_first});	/**	 * 根据关键字对指定列进行查询，查询全部<b>${name}</b>记录	 * @param startIndex <i>int</i>	 * @param endIndex <i>int</i>	 * @param ${tab?uncap_first}List <i>List<${tab}></i> 查询列名称、值	 * @return List<${tab}>	 */	public List<${tab}> getAll${tab}WithSearchKeyByPage(@Param(value="startIndex")int startIndex,			  @Param(value="endIndex")int endIndex,@Param(value="${tab?uncap_first}List")List<${tab}> ${tab?uncap_first}List);		/**	 * 根据关键字，查询多列数据<b>${name}</b>记录总数	 * @param ${tab?uncap_first}List <i>List<${tab}></i> 查询列名称、值	 * @return int	 */	public int getCountWithSearchKeyForPage(@Param(value="${tab?uncap_first}List")List<${tab}> ${tab?uncap_first}List);	<#else>public interface ${tab}ExtendViewMapper {	/**	 * 根据主键，获取一条<b>${name}</b>记录内容、及关联数据	 * @param ${tab?uncap_first}Extend <i>${tab}Extend</i>	 * @return ${tab}Extend	 */	public ${tab}Extend get${tab}ByPrimaryKeyWithJoin(@Param(value="${tab?uncap_first}")${tab}Extend ${tab?uncap_first}Extend);		/**	 * 根据条件，查询全部<b>${name}</b>记录、及关联数据	 * @param ${tab?uncap_first}Extend <i>${tab}Extend</i>	 * @return List<${tab}Extend>	 */	public List<${tab}Extend> getAll${tab}BySearchWithJoin(@Param(value="${tab?uncap_first}")${tab}Extend ${tab?uncap_first}Extend);		/**	 * 根据关键字对指定列进行查询，查询全部<b>${name}</b>记录	 * @param ${tab?uncap_first}ExtendList <i>List<${tab}Extend></i> 需要查询列名称、值	 * @return List<${tab}Extend>	 */	public List<${tab}Extend> getAll${tab}BySearchKeyWithJoin(@Param(value="${tab?uncap_first}ExtendList")List<${tab}Extend> ${tab?uncap_first}ExtendList);		/**	 * 根据条件，查询<b>${name}</b>记录、及关联数据，带有分页	 * @param startIndex <i>int</i>	 * @param endIndex <i>int</i>	 * @param ${tab?uncap_first}Extend <i>${tab}Extend</i>	 * @return Pagination	 */	public List<${tab}Extend> getAll${tab}ByPageWithJoin(@Param(value="startIndex")int startIndex,			  @Param(value="endIndex")int endIndex,@Param(value="${tab?uncap_first}")${tab}Extend ${tab?uncap_first}Extend);		/**	 * 根据条件，查询符合条件<b>${name}</b>记录、及关联数据 总数	 * @param ${tab?uncap_first}Extend	 * @return	 */	public int getCountForPageWithJoin(@Param(value="${tab?uncap_first}")${tab}Extend ${tab?uncap_first}Extend);		/**	 * 根据条件，查询<b>${name}</b>记录、及关联数据，带有分页	 * @param startIndex <i>int</i>	 * @param endIndex <i>int</i>	 * @param ${tab?uncap_first}ExtendList <i>List<${tab}Extend></i> 查询列名称、值	 * @return Pagination	 */	public List<${tab}Extend> getAll${tab}ByPageAndSearchKeyWithJoin(@Param(value="startIndex")int startIndex,			  @Param(value="endIndex")int endIndex,@Param(value="${tab?uncap_first}ExtendList")List<${tab}Extend> ${tab?uncap_first}ExtendList);		/**	 * 根据条件，查询符合条件<b>${name}</b>记录、及关联数据 总数	 * @param ${tab?uncap_first}ExtendList <i>List<${tab}Extend></i> 查询列名称、值	 * @return	 */	public int getCountForPageAndSearchKeyWithJoin(@Param(value="${tab?uncap_first}ExtendList")List<${tab}Extend> ${tab?uncap_first}ExtendList);</#if></#if>}