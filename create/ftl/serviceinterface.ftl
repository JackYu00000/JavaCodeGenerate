<#include "function.ftl">package ${packname}.service;import java.util.List;import ${packname}.entity.${tab};<#if (refCols?size>0)><#list refCols as col><#if (col.typeExpend?upper_case=="LIST")>import ${packname}.entity.${col.type};<#if (col.fatherTableHasJoin)>import ${packname}.entity.extend.${col.type}Extend;</#if></#if></#list></#if><#if (joinTables?size>0)>import ${packname}.entity.extend.${tab}Extend;</#if>import ${packname}.web.Pagination;/**   服务：${name}*/public interface ${tab}Service {<#if (!code?starts_with("SQLVW_") && !code?starts_with("SQLVVW_"))>		/**	 * 添加一条新<b>${name}</b>记录	 * @param ${tab?uncap_first} <i>${tab}</i>	 * @return int	 */	public int add${tab}(${tab} ${tab?uncap_first});		/**	 * 根据主键删除一条<b>${name}</b>记录	 * @param <@compress><@getTableKey cols/></@compress> <i><@getTableKeyJavaType cols /></i>	 * @return int	 *///	public int del${tab}ByPrimaryKey(<@compress><@getTableKeyParamFirst cols/></@compress>);		/**	 * 根据条件删除多条<b>${name}</b>记录	 * @param ${tab?uncap_first} <i>${tab}</i>	 * @return void	 *///	public void del${tab}ByFilter(${tab} ${tab?uncap_first});		/**	 * 根据主键更新一条新<b>${name}</b>记录	 * @param ${tab?uncap_first} <i>${tab} 更新内容</i>	 * @return int	 */	public int upd${tab}ByPrimaryKey(${tab} ${tab?uncap_first});		/**	 * 根据条件更新多条新<b>${name}</b>记录	 * @param ${tab?uncap_first}	<i>${tab} 过滤条件</i>	 * @param ${tab?uncap_first}Upd <i>${tab} 更新内容</i>	 * @return int	 */	public int upd${tab}ByFilter(${tab} ${tab?uncap_first},${tab} ${tab?uncap_first}Upd);</#if>		/**	 * 根据主键，获取一条<b>${name}</b>记录内容	 * @param <@compress><@getTableKey cols/></@compress> <i><@getTableKeyJavaType cols /></i>	 * @return ${tab}	 */	public ${tab} get${tab}ByPrimaryKey(<@compress><@getTableKeyParamFirst cols/></@compress>);	/**	 * 根据主键，获取一条<b>${name}</b>记录指定列的内容	 * @param ${tab?uncap_first} <i>${tab},设定主键：<@compress><@getTableKey cols/></@compress>；设定需要检索的列：selectCols</i>	 * @return ${tab}	 */	public ${tab} get${tab}ByPrimaryKey(${tab} ${tab?uncap_first});		/**	 * 根据条件，查询全部<b>${name}</b>记录	 * @param ${tab?uncap_first} <i>${tab}</i>	 * @return List<${tab}>	 */	public List<${tab}> getAll${tab}BySearch(${tab} ${tab?uncap_first});	/**	 * 根据条件，查询第一条<b>${name}</b>记录	 * @param ${tab?uncap_first} <i>${tab}</i>	 * @return ${tab}	 */	public ${tab} getOne${tab}BySearch(${tab} ${tab?uncap_first});	/**	 * 根据条件，查询第一条<b>${name}</b>记录	 * @param ${tab?uncap_first} <i>${tab}</i>	 * @return int	 */	public int getCount${tab}BySearch(${tab} ${tab?uncap_first});		/**	 * 根据关键字对指定列进行查询，查询全部<b>${name}</b>记录	 * @param ${tab?uncap_first} <i>${tab}</i> searchKey 属性为查询关键字	 * @param colList <i>List<String></i> 需要查询列名称	 * @return List<${tab}>	 */	public List<${tab}> getAll${tab}BySearchKey(${tab} ${tab?uncap_first},List<String> colList);		/**	 * 根据条件，查询<b>${name}</b>记录，带有分页	 * @param page <i>Pagination</i> 分页信息	 * @param ${tab?uncap_first} <i>${tab}</i>	 * @return Pagination	 */	public Pagination getAll${tab}ByPage(Pagination page,${tab} ${tab?uncap_first});		/**	 * 根据关键字对指定列进行查询，查询全部<b>${name}</b>记录	 * @param page <i>Pagination</i> 分页信息	 * @param ${tab?uncap_first} <i>${tab}</i>	 * @param colList <i>List<String></i> 查询列名称	 * @return Pagination	 */	public Pagination getAll${tab}ByPageAndSearchKey(Pagination page,${tab} ${tab?uncap_first},List<String> colList);	<#if (joinTables?size>0)>	/**	 * 根据主键，获取一条<b>${name}</b>记录内容、及关联数据	 * @param <@compress><@getTableKey cols/></@compress> <i><#list cols as col><#if (col.primaryKey && col.inSelfTable)><@getColJavaType col /><#break></#if></#list></i>	 * @return ${tab}Extend	 */	public ${tab}Extend get${tab}ByPrimaryKeyWithJoin(${tab}Extend ${tab?uncap_first}Extend);		/**	 * 根据条件，查询全部<b>${name}</b>记录、及关联数据	 * @param ${tab?uncap_first} <i>${tab}Extend</i>	 * @return List<${tab}Extend>	 */	public List<${tab}Extend> getAll${tab}BySearchWithJoin(${tab}Extend ${tab?uncap_first}Extend);		/**	 * 根据条件，查询全部<b>${name}</b>记录、及关联数据	 * @param ${tab?uncap_first} <i>${tab}Extend</i>	 * @param colList <i>List<String></i> 查询列名称	 * @return List<${tab}Extend>	 */	public List<${tab}Extend> getAll${tab}BySearchKeyWithJoin(${tab}Extend ${tab?uncap_first}Extend,List<String> colList);		/**	 * 根据条件，查询第一条<b>${name}</b>记录、及关联数据	 * @param ${tab?uncap_first} <i>${tab}Extend</i>	 * @return ${tab}Extend	 */	public ${tab}Extend getOne${tab}BySearchWithJoin(${tab}Extend ${tab?uncap_first}Extend);		/**	 * 根据条件，查询<b>${name}</b>记录、及关联数据，带有分页	 * @param page <i>Pagination</i> 分页信息	 * @param ${tab?uncap_first} <i>${tab}Extend</i>	 * @return Pagination	 */	public Pagination getAll${tab}ByPageWithJoin(Pagination page,${tab}Extend ${tab?uncap_first}Extend);		/**	 * 根据条件，查询<b>${name}</b>记录、及关联数据，带有分页	 * @param page <i>Pagination</i> 分页信息	 * @param ${tab?uncap_first} <i>${tab}Extend</i>	 * @param colList <i>List<String></i> 查询列名称	 * @return Pagination	 */	public Pagination getAll${tab}ByPageAndSearchKeyWithJoin(Pagination page,${tab}Extend ${tab?uncap_first}Extend,List<String> colList);		</#if>		<#if (refCols?size>0)><#list refCols as col><#if (col.typeExpend?upper_case=="LIST")><#if (col.fatherTableHasJoin)>	/**	 * 添加扩展字段数据：<b>${col.type} ${col.name}</b>	 * @param ${tab?uncap_first}	 * @param ${col.type?uncap_first}ExtendFilterExtend 过滤条件	 * @return	 */	public ${tab} add<@genAttributeByForSetAndGet colName_ABFSAG='${col.code}'/>(${tab} ${tab?uncap_first},${col.type}Extend ${col.type?uncap_first}ExtendFilter);	/**	 * 添加扩展字段数据：<b>${col.type} ${col.name}</b>	 * @param ${tab?uncap_first}	 * @param ${col.type?uncap_first}ExtendFilter 过滤条件	 * @param page 分页条数条件	 * @return	 */	public ${tab} add<@genAttributeByForSetAndGet colName_ABFSAG='${col.code}'/>(${tab} ${tab?uncap_first},${col.type}Extend ${col.type?uncap_first}ExtendFilter,Pagination page);<#else>	/**	 * 添加扩展字段数据：<b>${col.type} ${col.name}</b>	 * @param ${tab?uncap_first}	 * @param ${col.type?uncap_first}Filter 过滤条件	 * @return	 */	public ${tab} add<@genAttributeByForSetAndGet colName_ABFSAG='${col.code}'/>(${tab} ${tab?uncap_first},${col.type} ${col.type?uncap_first}Filter);	/**	 * 添加扩展字段数据：<b>${col.type} ${col.name}</b>	 * @param ${tab?uncap_first}	 * @param ${col.type?uncap_first}Filter 过滤条件	 * @param page 分页条数条件	 * @return	 */	public ${tab} add<@genAttributeByForSetAndGet colName_ABFSAG='${col.code}'/>(${tab} ${tab?uncap_first},${col.type} ${col.type?uncap_first}Filter,Pagination page);</#if>	<#else>	/**	 * 添加扩展字段数据：<b>${col.type} ${col.name}</b>	 * @param ${tab?uncap_first}	 * @return	 */	public ${tab} add<@genAttributeByForSetAndGet colName_ABFSAG='${col.code}'/>(${tab} ${tab?uncap_first});	</#if></#list></#if>}