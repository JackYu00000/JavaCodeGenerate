package com.tools;import freemarker.template.Configuration;import freemarker.template.DefaultObjectWrapper;import freemarker.template.Template;import org.apache.commons.io.FilenameUtils;import org.apache.commons.lang3.StringUtils;import java.io.*;public class TemplateFile {	static Object temp ;	String XML_END = ".xml";//	String JAVA_FTL = "./create/ftl/entity.ftl";	String JAVA_FTL = "./create/ftl/entity/entitymap.ftl";	String JAVA_EXTEND_FTL = "./create/ftl/entity/entityextend.ftl";	String JAVA_VOJO_FTL = "./create/ftl/entity/entityvojo.ftl";	String ENUM_FTL = "./create/ftl/entity/entity_enum.ftl";	String REF_ENUM_FTL = "./create/ftl/entity/entity_ref_enum.ftl";	String COMPARE_COL_ENUM_FTL = "./create/ftl/entity/entity_comparecol_enum.ftl";	String UPDATE_IN_SQL_COL_ENUM_FTL = "./create/ftl/entity/entity_updateinsql_enum.ftl";	String JAVA_END = ".java";	String JSON_END = ".json";	String XML_FTL = "./create/ftl/mapperxml.ftl";	String XML_FTL_LOWER_TABLENAME = "./create/ftl/mapperxml_uncaps.ftl";	String MAPPER_XML_END = "Mapper.xml";	String INTER_FTL = "./create/ftl/mapperinterface.ftl";	String INTER_TEST_FTL = "./create/ftl/test/mappertest.ftl";	String MAPPER_INTER_END ="Mapper.java";	String MAPPER_INTER_TEST_END ="MapperTest.java";	String POSTMAN_JSON_FTL = "./create/ftl/postman.ftl";	String SVC_FTL = "./create/ftl/serviceinterface.ftl";	String SVCIMPL_FTL = "./create/ftl/serviceimpl.ftl";	String REF_SVCIMPL_FTL = "./create/ftl/serviceimplref.ftl";	String REF_SVCIMPL_FTL_MY = "./create/ftl/serviceimplref_mysql.ftl";	String ACTION_FTL = "./create/ftl/controller/managercontroller.ftl";	String VIEWACTION_FTL = "./create/ftl/controller/webviewcontroller.ftl";	String INTERFACE_JSON_FTL = "./create/ftl/controller/interfacejsoncontroller.ftl";	String INTERFACE_MOBI_FTL = "./create/ftl/controller/interfacemobicontroller.ftl";	String INTERFACE_REST_FTL = "./create/ftl/controller/interfacerestcontroller.ftl";		String JAVA_WITHUPLOAD = "./create/ftl/entitywithupload.ftl";	String STRUTS="./create/ftl/struts.ftl";	String STRUTS_END=".xml";		String JSP_MODIFY="./create/ftl/jsp/modifyjsp.ftl";	String JSP_SHOW="./create/ftl/jsp/showjsp.ftl";	String JSP_ADD="./create/ftl/jsp/addjsp.ftl";	String JSP_LIST_WITH_COLNAME="./create/ftl/jsp/list/listjsp.ftl";	String JSP_LIST_HEADER="./create/ftl/jsp/list/listjsp_header.ftl";	String JSP_LIST_SEARCH="./create/ftl/jsp/list/listjsp_search.ftl";	String JSP_LIST_PAGE_JS="./create/ftl/jsp/list/listjsp_page_js.ftl";	String JSP_LEFTMENU="./create/ftl/jsp/leftmenu.ftl";	String JSP_DATABASE_API="./create/ftl/jsp/databaseapi.ftl";	String JSP_DATABASE_API_HTML="./create/ftl/jsp/databaseapi_html.ftl";	String DATABASE_MD="./create/ftl/jsp/databasestructure_md.ftl";	String JAVAEXAMPLE_MD="./create/ftl/jsp/javaexample_md.ftl";	public static String JSON_INTERFACE_JSON="./create/ftl/jsp/jsonapi.ftl";	public static String MOBI_INTERFACE_JSON="./create/ftl/jsp/mobiapi.ftl";	public static String JSCONTENT="./create/ftl/jsp/jscontent.ftl";	public static String INTERFACE_POSTMAN="./create/ftl/postman/postman.ftl";		String APPLICATION_CONTEXT="./create/ftl/applicationContext-context.ftl";	String WEB_XML="./create/ftl/web.ftl";	String SQL_CREATEVIEW="./create/ftl/createviewsql.ftl";			public static String JSP_END=".jsp";	String HTML_END=".html";	String MD_END=".md";	String SQL_END=".sql";	public static String POSTMAN_JSON_COLLECTION_END = ".json.postman_collection";		String JSON_COLLECTION_END = ".json";		public static void process(String template,File out, Object data) throws Exception {  		Configuration cfg = init();	    	    temp = data;	    Writer w = new OutputStreamWriter(new FileOutputStream(out),"UTF-8");  	    Template temp = cfg.getTemplate(template);  	    temp.process(data, w);  	    w.flush();	}	private static Configuration init() throws IOException {		Configuration cfg = new Configuration();  	    cfg.setDirectoryForTemplateLoading(new File("."));  	    cfg.setObjectWrapper(new DefaultObjectWrapper());  	      	    //设置字符集  	    cfg.setDefaultEncoding("UTF-8");  	      	    //设置尖括号语法和方括号语法,默认是自动检测语法  	    //  自动 AUTO_DETECT_TAG_SYNTAX  	    //  尖括号 ANGLE_BRACKET_TAG_SYNTAX  	    //  方括号 SQUARE_BRACKET_TAG_SYNTAX  	    cfg.setTagSyntax(Configuration.ANGLE_BRACKET_TAG_SYNTAX);		return cfg;	} 		public static String realPathBuild(String filename, String packname,			String filepath) {		String[] packs = packname.split("\\.");		String packpath = StringUtils.join(packs, "/");		packpath = filepath+"/"+packpath;		String f = FilenameUtils.concat(packpath, filename);		return f;	}  }